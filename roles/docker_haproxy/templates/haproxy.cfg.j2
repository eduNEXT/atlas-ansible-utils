global
  # stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000

backend http_k8s_servers
  balance source
  {% for backend in DOCKER_HAPROXY_BACKENDS %}
  server s1 {{backend}}:{{DOCKER_HAPROXY_HTTP_PORT}} check send-proxy
  {% endfor %}
  mode tcp

backend https_k8s_servers
  balance source
  {% for backend in DOCKER_HAPROXY_BACKENDS %}
  server s1 {{backend}}:{{DOCKER_HAPROXY_HTTPS_PORT}} check send-proxy
  {% endfor %}
  mode tcp

frontend http
  bind *:80
  default_backend http_k8s_servers
  mode tcp

frontend https
  bind *:443
  default_backend https_k8s_servers
  mode tcp

# frontend stats
#   bind *:8404
#   stats enable
#   stats uri /
#   stats refresh 10s
