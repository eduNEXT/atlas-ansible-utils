---
# elasticsearch
#
# Dependencies:
#
#   * common
#
# Example play:
#
# This role can be used to do a single-server or clustered
# installation of the elasticsearch service.  When a cluster
# is being installed, there are two important things that
# you must know.

# The ELASTICSEARCH_CLUSTERED var must be true.

# All hosts targeted by your play will be cluster peers.
# Elasticsearch will determine who the master should be.
#
# Ansible provides handy set operators for use in the
# plays host declaration, as seen in the following example.
#
# -  hosts: tag_role_elasticsearch:&tag_environment_stage
#    roles:
#    - common
#    - elasticsearch
#

- name: Ensure dependencies are installed.
  ansible.builtin.apt:
    name:
      - gnupg2
    state: present
    update_cache: true

- name: Install Elasticsearch repo key
  ansible.builtin.apt_key:
    url: "{{ elasticsearch_apt_key_url }}"
    state: present
  tags:
    - install
    - install:base

- name: Add Elasticsearch Repo
  ansible.builtin.apt_repository:
    repo: "{{ elasticsearch_repo }}"
    state: present
  tags:
    - install
    - install:base

- name: Install elasticsearch
  ansible.builtin.apt:
    pkg: "{{ elasticsearch_package_name }}={{ ELASTICSEARCH_VERSION }}"
    state: present
    install_recommends: true
    force: true
    update_cache: true
  tags:
    - install
    - install:base
  register: elasticsearch_reinstall

- name: Prevent elasticsearch from being upgraded
  ansible.builtin.dpkg_selections:
    name: elasticsearch
    selection: hold

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    mode: "0755" # Only allow the owner to write to the file
  with_items:
    - "{{ elasticsearch_data_dir }}"
    - "{{ elasticsearch_log_dir }}"
    - "{{ elasticsearch_cfg_dir }}"
  tags:
    - install
    - install:base

- name: Update elasticsearch defaults
  ansible.builtin.template:
    src: etc/default/elasticsearch.j2
    dest: /etc/default/elasticsearch
    mode: preserve
  tags:
    - install
    - install:configuration

- name: Drop the elasticsearch config
  ansible.builtin.template:
    src: edx/etc/elasticsearch/elasticsearch.yml.j2
    dest: "{{ elasticsearch_cfg_dir }}/elasticsearch.yml"
    mode: "0644"
  tags:
    - install
    - install:configuration

- name: Drop the elasticsearch logging config
  ansible.builtin.copy:
    src: /etc/elasticsearch/log4j2.properties
    dest: "{{ elasticsearch_cfg_dir }}/log4j2.properties"
    remote_src: true
    mode: "0644"
  tags:
    - install
    - install:configuration

- name: Drop the elasticsearch jvm config
  ansible.builtin.template:
    src: edx/etc/elasticsearch/jvm.options.j2
    dest: "{{ elasticsearch_cfg_dir }}/jvm.options"
    mode: "0644"
  tags:
    - install
    - install:configuration

- name: Drop the elasticsearch systemd service config
  ansible.builtin.template:
    src: lib/systemd/system/elasticsearch.service.j2
    dest: /lib/systemd/system/elasticsearch.service
    mode: "0644"
  tags:
    - install
    - install:configuration

- name: Ensure elasticsearch is enabled and started
  ansible.builtin.service:
    name: elasticsearch
    state: started
    enabled: true
  tags:
    - manage
    - manage:start

- name: Restart elastic when there has been an upgrade
  ansible.builtin.service:
    name: elasticsearch
    state: restarted
    enabled: true
  when: elasticsearch_reinstall.changed
  tags:
    - manage
    - manage:restart
    - install
