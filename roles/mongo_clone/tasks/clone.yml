---
- name: Check if the suffix for database cloning is non-empty
  ansible.builtin.fail:
    msg: The variable MONGO_CLONE_RESTORE_SUFFIX must be defined and contain a meaningful suffix so that the cloned databases names are not the same as the source
      databases names.
  when: MONGO_CLONE_RESTORE_SUFFIX is not defined or MONGO_CLONE_RESTORE_SUFFIX | trim == ''

- name: Extract Mongo backup from database {{ item }}
  ansible.builtin.include_role:
    name: mongo_backup
  vars:
    MONGO_BACKUP_ALL_DATABASES: false
    MONGO_BACKUP_PRE_CLEAN_ROOT: true
    MONGO_BACKUP_USER: "{{ MONGO_CLONE_USER }}"
    MONGO_BACKUP_PASSWORD: "{{ MONGO_CLONE_PASSWORD }}"
    MONGO_BACKUP_DATABASE: "{{ item }}"
    MONGO_BACKUP_ROOT: "{{ MONGO_CLONE_ROOT }}"
    MONGO_BACKUP_STORAGE_OPTIONS:
      EXTERNAL_STORAGE_TYPE: ""
      EXTERNAL_STORAGE_OPTIONS: {}

- name: Generate new database name with suffix
  ansible.builtin.set_fact:
    new_clone_db_name: "{{ item + MONGO_CLONE_RESTORE_SUFFIX }}"

- name: Restore Mongo backup on database {{ new_clone_db_name }}
  ansible.builtin.include_role:
    name: mongo_restore
  vars:
    MONGO_RESTORE_BACKUP_ROOT: "{{ MONGO_CLONE_ROOT }}"
    MONGO_RESTORE_USER: "{{ MONGO_CLONE_USER }}"
    MONGO_RESTORE_PASSWORD: "{{ MONGO_CLONE_PASSWORD }}"
    MONGO_RESTORE_ORIGINAL_DATABASE_NAME: "{{ item }}"
    MONGO_RESTORE_TARGET_DATABASE_NAME: "{{ new_clone_db_name }}"
