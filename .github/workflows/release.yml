name: Release
on:
  - workflow_dispatch

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install -r requirements/dev.txt

      - name: Retrieve Next Version
        id: next-version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEXT_VERSION=$(semantic-release version --print)
          echo "next_version=$NEXT_VERSION" >> "$GITHUB_OUTPUT"

      - name: Bump Helm appVersion
        env:
            NEXT_VERSION: ${{ steps.next-version.outputs.next_version }}
        run: |
          yq -i ".version = \"$NEXT_VERSION\", .appVersion = \"$NEXT_VERSION\"" charts/ansible-runner/Chart.yaml
          git add -u charts

      - name: Generate release
        run: |
          make release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PAT }}

  release-helm:
    runs-on: ubuntu-latest
    needs: release
    concurrency: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1
        with:
          mark_as_latest: false
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
